export script {

function matrix w h ... {
	table m
	m w $w
	m h $h
	if eq(size(@) 1) {
		array v @(0)
		m _v $v
	}
	elif eq(size(@) 0) {
		array v
		for 0 mul($w $h) {
			push v 0
		}
		m _v $v
	}
	else {
		throw "Usage: matrix <w> <h> [initializer]"
	}
	return $m
}

function mat_is_square a {
	table m $a
	return eq(m(w) m(h))
}

function mat_get a x y {
	table m $a
	array v m(_v)
	return v(add(mul($y m(w)) $x))
}

function mat_set name _x _y _value {
	table _m eval($name)
	array _a _m(_v)
	_a add(mul($_y _m(w)) $_x) $_value
	$name _v $_a
}

function mat_neg a {
	table ma $a
	for y 0 ma(h) {
		for x 0 ma(w) {
			mat_set ma $x $y neg(mat_get($ma $x $y))
		}
	}
	return $ma
}

function mat_add a b {
	table ma $a
	table mb $b
	for y 0 ma(h) {
		for x 0 ma(w) {
			mat_set ma $x $y add(mat_get($ma $x $y) mat_get($mb $x $y))
		}
	}
	return $ma
}

function mat_sub a b {
	return mat_add($a mat_neg($b))
}

function mat_mul a b {
	table ma $a
	table mb $b
	table m matrix(mb(h) ma(w))
	for y 0 ma(h) {
		for x 0 ma(w) {
			for i 0 ma(h) {
				var old_val mat_get($m $x $y)
				mat_set m $x $y add($old_val mul(mat_get($a $i $y) mat_get($b $x $i)))
			}
		}
	}
	return $m
}

function mat_str a {
	var str
	table ma $a
	for y 0 ma(h) {
		if ne($y 0) {
			append str "\n"
		}
		for x 0 ma(w) {
			if eq($x 0) {
				append str mat_get($a $x $y)
			}
			else {
				append str " "
				append str mat_get($a $x $y))
			}
		}
	}
	return $str
}

} // end export script
