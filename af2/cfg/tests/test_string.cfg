println "------------------------------"
println "Running string tests..."

assert {empty ""}
assert {not empty(aaa)}
assert {not empty(" ")}
assert {not empty("\n")}
assert {not empty("\t")}

assert {streq aaa aaa}
assert {streq abc123 abc123}
assert {not streq(aaa abc)}
assert {not streq(abc aaa)}
assert {not streq(1 1.0)}
assert {not streq(001 1)}

assert {eq strcmp(aaa aaa) 0}
assert {eq strcmp(abc123 abc123) 0}
assert {lt strcmp(aaa abc) 0}
assert {gt strcmp(abc aaa) 0}
assert {lt strcmp(abc c) 0}
assert {gt strcmp(c ad) 0}
assert {lt strcmp(1 1.0) 0}
assert {gt strcmp(1.0 1) 0}
assert {lt strcmp(001 1) 0}
assert {gt strcmp(1 001) 0}

assert {eq strfind(abcdefg a) 0}
assert {eq strfind(abcdefg d) 3}
assert {eq strfind(abcdefg h) -1}
assert {eq strfind(abcdefg cde) 2}
assert {eq strfind(a abc) -1}
assert {eq strfind(d abc) -1}

assert {eq strlen("") 0}
assert {eq strlen(abc) 3}
assert {eq strlen("abc 123 456 ") 12}

assert {streq concat(aaa "") aaa}
assert {streq concat("" aaa) aaa}
assert {streq concat(aaa aaa) aaaaaa}
assert {streq concat(aaa bbb) aaabbb}
assert {streq concat(aaa bbb ccc) aaabbbccc}
assert {streq concat(aaa "aa aabc" ccc 412fda) "aaaaa aabcccc412fda"}

assert {streq substr(abc123 2) c123}
assert {streq substr(abc123 0) abc123}
assert {streq substr(abc123 6) ""}
assert {streq substr(abc123 2 3) c12}
assert {streq substr(abc123 0 3) abc}
assert {streq substr(abc123 6 3) ""}
assert {streq substr(abc123 2 11) c123}
assert {streq substr(abc123 0 99999999) abc123}
assert {streq substr(abc123 6 99999999) ""}

assert {streq char_at(abc123 0) a}
assert {streq char_at(abc123 1) b}
assert {streq char_at(abc123 2) c}
assert {streq char_at(abc123 3) 1}
assert {streq char_at(abc123 4) 2}
assert {streq char_at(abc123 5) 3}

println_colored green "String tests passed!"
