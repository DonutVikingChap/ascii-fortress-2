println "------------------------------"
println "Running math tests..."

assert {approx_eq $e 2.71828182845904523536028747135266249775724709369995 0.00001}
assert {approx_eq $pi 3.14159265358979323846264338327950288419716939937510 0.00001}

assert {approx_eq 1 1 0}
assert {approx_eq 0 0 0}
assert {approx_eq 0 -0 0}
assert {approx_eq 0.000000001 0 0.00001}
assert {approx_eq 4314.545466 4314.545466 0}
assert {approx_eq -999999 -999999 0}
assert {approx_eq -999.939 -999.939 0}
assert {approx_eq 1 1.0 0}
assert {approx_eq 1 1.000000000000 0}
assert {approx_eq 1.0 1 0}
assert {approx_eq 1.000000000000 1 0}
assert {approx_eq 0000001 1 0}
assert {approx_eq 1 0000001 0}
assert {approx_eq 9999 9999.0 0}
assert {approx_eq 9999 9999.000000000000 0}
assert {approx_eq 9999.0 9999 0}
assert {approx_eq 9999.000000000000 9999 0}
assert {approx_eq 9999 0000009999 0}
assert {approx_eq 0.0000001 0 0.1}
assert {not approx_eq(0 1 0)}
assert {not approx_eq(1 0 0)}
assert {not approx_eq(0.0000001 0 0)}
assert {not approx_eq(9348913 -34134 0)}
assert {not approx_eq(-999 999 0)}
assert {approx_eq 1 1 0.1}
assert {approx_eq 0 0 0.1}
assert {approx_eq 0 -0 0.1}
assert {approx_eq 4314.545466 4314.545466 0.00000001}
assert {approx_eq -999999 -999999 0.00000001}
assert {approx_eq -999.939 -999.939 0.00000001}
assert {approx_eq 1 1.0 0.1}
assert {approx_eq 1 1.000000000000 0.1}
assert {approx_eq 1.0 1 0.1}
assert {approx_eq 1.000000000000 1 0.1}
assert {approx_eq 0000001 1 0.1}
assert {approx_eq 1 0000001 0.1}
assert {approx_eq 9999 9999.0 0.1}
assert {approx_eq 9999 9999.000000000000 0.1}
assert {approx_eq 9999.0 9999 0.1}
assert {approx_eq 9999.000000000000 9999 0.1}
assert {approx_eq 9999 0000009999 0.1}
assert {not approx_eq(0 1 0.1)}
assert {not approx_eq(1 0 0.1)}
assert {not approx_eq(9348913 -34134 0.1)}
assert {not approx_eq(-999 999 0.1)}
assert {approx_eq 1 1.001 0.01}
assert {approx_eq 1.001 1 0.01}
assert {not approx_eq(1 1.1 0.01)}
assert {not approx_eq(1.1 1 0.01)}
println_colored green "approx_eq tests passed!"

assert {eq 1 1}
assert {eq 0 0}
assert {eq 0 -0}
assert {eq 4314.545466 4314.545466}
assert {eq -999999 -999999}
assert {eq -999.939 -999.939}
assert {eq 1 1.0}
assert {eq 1 1.000000000000}
assert {eq 1.0 1}
assert {eq 1.000000000000 1}
assert {eq 0000001 1}
assert {eq 1 0000001}
assert {eq 9999 9999.0}
assert {eq 9999 9999.000000000000}
assert {eq 9999.0 9999}
assert {eq 9999.000000000000 9999}
assert {eq 9999 0000009999}
assert {not eq(0 1)}
assert {not eq(1 0)}
assert {not eq(0.0000001 0)}
assert {not eq(9348913 -34134)}
assert {not eq(-999 999)}
println_colored green "eq tests passed!"

assert {ne 0 1}
assert {ne 1 0}
assert {ne 0.0000001 0}
assert {ne 9348913 -34134}
assert {ne -999 999}
assert {not ne(1 1)}
assert {not ne(0 0)}
assert {not ne(0 -0)}
assert {not ne(4314.545466 4314.545466)}
assert {not ne(-999999 -999999)}
assert {not ne(-999.939 -999.939)}
assert {not ne(1 1.0)}
assert {not ne(1 1.000000000000)}
assert {not ne(1.0 1)}
assert {not ne(1.000000000000 1)}
assert {not ne(0000001 1)}
assert {not ne(1 0000001)}
assert {not ne(9999 9999.0)}
assert {not ne(9999 9999.000000000000)}
assert {not ne(9999.0 9999)}
assert {not ne(9999.000000000000 9999)}
assert {not ne(9999 0000009999)}
println_colored green "ne tests passed!"

assert {lt 0 1}
assert {lt 0 14541}
assert {lt -1 14541}
assert {lt -9999999 14541}
assert {lt -9999999 -9999}
assert {lt -9999999 0}
assert {not lt(0 0)}
assert {not lt(1 1)}
assert {not lt(123.123 123.123)}
assert {not lt(9999 9999)}
assert {not lt(-9999 -9999)}
assert {not lt(1 0)}
assert {not lt(14541 0)}
assert {not lt(14541 -1)}
assert {not lt(14541 -9999999)}
assert {not lt(-9999 -9999999)}
assert {not lt(0 -9999999)}
println_colored green "lt tests passed!"

assert {gt 1 0}
assert {gt 14541 0}
assert {gt 14541 -1}
assert {gt 14541 -9999999}
assert {gt -9999 -9999999}
assert {gt 0 -9999999}
assert {not gt(0 0)}
assert {not gt(1 1)}
assert {not gt(123.123 123.123)}
assert {not gt(9999 9999)}
assert {not gt(-9999 -9999)}
assert {not gt(0 1)}
assert {not gt(0 14541)}
assert {not gt(-1 14541)}
assert {not gt(-9999999 14541)}
assert {not gt(-9999999 -9999)}
assert {not gt(-9999999 0)}
println_colored green "gt tests passed!"

assert {le 0 1}
assert {le 0 14541}
assert {le -1 14541}
assert {le -9999999 14541}
assert {le -9999999 -9999}
assert {le -9999999 0}
assert {le 0 0}
assert {le 1 1}
assert {le 123.123 123.123}
assert {le 9999 9999}
assert {le -9999 -9999}
assert {not le(1 0)}
assert {not le(14541 0)}
assert {not le(14541 -1)}
assert {not le(14541 -9999999)}
assert {not le(-9999 -9999999)}
assert {not le(0 -9999999)}
println_colored green "le tests passed!"

assert {ge 1 0}
assert {ge 14541 0}
assert {ge 14541 -1}
assert {ge 14541 -9999999}
assert {ge -9999 -9999999}
assert {ge 0 -9999999}
assert {ge 0 0}
assert {ge 1 1}
assert {ge 123.123 123.123}
assert {ge 9999 9999}
assert {ge -9999 -9999}
assert {not ge(0 1)}
assert {not ge(0 14541)}
assert {not ge(-1 14541)}
assert {not ge(-9999999 14541)}
assert {not ge(-9999999 -9999)}
assert {not ge(-9999999 0)}
println_colored green "ge tests passed!"

assert {eq abs(100) 100}
assert {eq abs(0) 0}
assert {eq abs(1) 1}
assert {eq abs(1.0) 1}
assert {eq abs(-100) 100}
assert {eq abs(-0) 0}
assert {eq abs(-1) 1}
assert {eq abs(123.123) 123.123}
assert {eq abs(-123.123) 123.123}
assert {eq abs(0.005) 0.005}
assert {eq abs(-0.005) 0.005}
println_colored green "abs tests passed!"

assert {eq round(100) 100}
assert {eq round(0) 0}
assert {eq round(1) 1}
assert {eq round(1.0) 1}
assert {eq round(-100) -100}
assert {eq round(-0) 0}
assert {eq round(-1) -1}
assert {eq round(123.123) 123}
assert {eq round(-123.123) -123}
assert {eq round(0.005) 0}
assert {eq round(-0.005) 0}
assert {eq round(0.5) 1}
assert {eq round(0.4) 0}
assert {eq round(1.2) 1}
assert {eq round(1.8) 2}
assert {eq round(-0.5) -1}
assert {eq round(-0.4) 0}
assert {eq round(-1.2) -1}
assert {eq round(-1.8) -2}
println_colored green "round tests passed!"

assert {eq floor(100) 100}
assert {eq floor(0) 0}
assert {eq floor(1) 1}
assert {eq floor(1.0) 1}
assert {eq floor(-100) -100}
assert {eq floor(-0) 0}
assert {eq floor(-1) -1}
assert {eq floor(123.123) 123}
assert {eq floor(-123.123) -124}
assert {eq floor(0.005) 0}
assert {eq floor(-0.005) -1}
assert {eq floor(0.5) 0}
assert {eq floor(0.4) 0}
assert {eq floor(1.2) 1}
assert {eq floor(1.8) 1}
assert {eq floor(-0.5) -1}
assert {eq floor(-0.4) -1}
assert {eq floor(-1.2) -2}
assert {eq floor(-1.8) -2}
println_colored green "floor tests passed!"

assert {eq ceil(100) 100}
assert {eq ceil(0) 0}
assert {eq ceil(1) 1}
assert {eq ceil(1.0) 1}
assert {eq ceil(-100) -100}
assert {eq ceil(-0) 0}
assert {eq ceil(-1) -1}
assert {eq ceil(123.123) 124}
assert {eq ceil(-123.123) -123}
assert {eq ceil(0.005) 1}
assert {eq ceil(-0.005) 0}
assert {eq ceil(0.5) 1}
assert {eq ceil(0.4) 1}
assert {eq ceil(1.2) 2}
assert {eq ceil(1.8) 2}
assert {eq ceil(-0.5) 0}
assert {eq ceil(-0.4) 0}
assert {eq ceil(-1.2) -1}
assert {eq ceil(-1.8) -1}
println_colored green "ceil tests passed!"

assert {eq neg(100) -100}
assert {eq neg(0) 0}
assert {eq neg(1) -1}
assert {eq neg(1.0) -1}
assert {eq neg(-100) 100}
assert {eq neg(-0) 0}
assert {eq neg(-1) 1}
assert {eq neg(123.123) -123.123}
assert {eq neg(-123.123) 123.123}
assert {eq neg(0.005) -0.005}
assert {eq neg(-0.005) 0.005}
println_colored green "neg tests passed!"

assert {eq add(0 0) 0}
assert {eq add(0 1) 1}
assert {eq add(1 0) 1}
assert {eq add(1 1) 2}
assert {eq add(3 1) 4}
assert {eq add(1 3) 4}
assert {eq add(3 11) 14}
assert {eq add(11 3) 14}
assert {eq add(0 -1) -1}
assert {eq add(-1 0) -1}
assert {eq add(1 -1) 0}
assert {eq add(-1 1) 0}
assert {eq add(-1 -1) -2}
assert {eq add(123 123) 246}
assert {eq add(123 -123) 0}
assert {eq add(-123 -123) -246}
assert {eq add(inf inf) inf}
assert {istrcontains add(inf -inf) nan}
assert {istrcontains add(-inf inf) nan}
assert {eq add(-inf -inf) -inf}
assert {approx_eq add(123.123 123.123) 246.246 0.00001}
assert {approx_eq add(123.123 -123) 0.123 0.00001}
assert {approx_eq add(-123.123 -123) -246.123 0.00001}
println_colored green "add tests passed!"

assert {eq sub(0 0) 0}
assert {eq sub(0 1) -1}
assert {eq sub(1 0) 1}
assert {eq sub(1 1) 0}
assert {eq sub(3 1) 2}
assert {eq sub(1 3) -2}
assert {eq sub(3 11) -8}
assert {eq sub(11 3) 8}
assert {eq sub(0 -1) 1}
assert {eq sub(-1 0) -1}
assert {eq sub(1 -1) 2}
assert {eq sub(-1 1) -2}
assert {eq sub(-1 -1) 0}
assert {eq sub(123 123) 0}
assert {eq sub(123 -123) 246}
assert {eq sub(-123 -123) 0}
assert {istrcontains sub(inf inf) nan}
assert {eq sub(inf -inf) inf}
assert {eq sub(-inf inf) -inf}
assert {istrcontains sub(-inf -inf) nan}
assert {approx_eq sub(123.123 123.123) 0 0.00001}
assert {approx_eq sub(123.123 -123) 246.123 0.00001}
assert {approx_eq sub(-123.123 -123) -0.123 0.00001}
println_colored green "sub tests passed!"

assert {eq mul(0 0) 0}
assert {eq mul(0 1) 0}
assert {eq mul(1 0) 0}
assert {eq mul(1 1) 1}
assert {eq mul(3 1) 3}
assert {eq mul(1 3) 3}
assert {eq mul(3 11) 33}
assert {eq mul(11 3) 33}
assert {eq mul(0 -1) 0}
assert {eq mul(-1 0) 0}
assert {eq mul(1 -1) -1}
assert {eq mul(-1 1) -1}
assert {eq mul(-1 -1) 1}
assert {eq mul(inf inf) inf}
assert {eq mul(inf -inf) -inf}
assert {eq mul(-inf inf) -inf}
assert {eq mul(-inf -inf) inf}
assert {eq mul(123 123) 15129}
assert {eq mul(123 -123) -15129}
assert {eq mul(-123 -123) 15129}
assert {approx_eq mul(123.123 123.123) 15159.273129 0.00001}
assert {approx_eq mul(123.123 -123) -15144.129 0.00001}
assert {approx_eq mul(-123.123 -123) 15144.129 0.00001}
println_colored green "mul tests passed!"

assert {istrcontains div(0 0) nan}
assert {eq div(0 1) 0}
assert {eq div(1 0) inf}
assert {eq div(1 1) 1}
assert {eq div(3 1) 3}
assert {eq div(1 4) 0.25}
assert {eq div(33 3) 11}
assert {eq div(3 10) 0.3}
assert {eq div(0 -1) 0}
assert {eq div(-1 0) -inf}
assert {eq div(1 -1) -1}
assert {eq div(-1 1) -1}
assert {eq div(-1 -1) 1}
assert {eq div(123 123) 1}
assert {eq div(123 -123) -1}
assert {eq div(-123 -123) 1}
assert {istrcontains div(inf inf) nan}
assert {istrcontains div(inf -inf) nan}
assert {istrcontains div(-inf inf) nan}
assert {istrcontains div(-inf -inf) nan}
assert {approx_eq div(123.123 123.123) 1 0.00001}
assert {approx_eq div(123.123 -123) -1.001 0.00001}
assert {approx_eq div(-123.123 -123) 1.001 0.00001}
println_colored green "div tests passed!"

assert {eq mod(0 1) 0}
assert {eq mod(1 1) 0}
assert {eq mod(3 1) 0}
assert {eq mod(1 4) 1}
assert {eq mod(33 3) 0}
assert {eq mod(34 3) 1}
assert {eq mod(35 3) 2}
assert {eq mod(36 3) 0}
assert {eq mod(3 10) 3}
assert {eq mod(0 -1) 0}
assert {eq mod(1 -1) 0}
assert {eq mod(-1 1) 0}
assert {eq mod(-1 -1) 0}
assert {eq mod(123 123) 0}
assert {eq mod(123 -123) 0}
assert {eq mod(-123 -123) 0}
println_colored green "mod tests passed!"

assert {eq pow(0 0) 1}
assert {eq pow(0 1) 0}
assert {eq pow(1 0) 1}
assert {eq pow(1 1) 1}
assert {eq pow(3 1) 3}
assert {eq pow(1 3) 1}
assert {eq pow(3 11) 177147}
assert {eq pow(11 3) 1331}
assert {eq pow(0 -1) inf}
assert {eq pow(-1 0) 1}
assert {eq pow(1 -1) 1}
assert {eq pow(-1 1) -1}
assert {eq pow(-1 -1) -1}
assert {eq pow(inf inf) inf}
assert {eq pow(inf -inf) 0}
assert {eq pow(-inf inf) inf}
assert {eq pow(-inf -inf) 0}
assert {approx_eq pow(2.123 2.123) 4.944413 0.00001}
assert {approx_eq pow(2.123 -2) 0.22187075 0.00001}
assert {approx_eq pow(-2.123 2) 4.5071287 0.00001}
assert {approx_eq pow(-2.123 -2) 0.22187075 0.00001}
println_colored green "pow tests passed!"

assert {eq sqrt(0) 0}
assert {eq sqrt(1) 1}
assert {approx_eq sqrt(2) 1.4142135 0.00001}
assert {eq sqrt(9) 3}
assert {eq sqrt(10000) 100}
assert {istrcontains sqrt(-1) nan}
assert {istrcontains sqrt(-3) nan}
assert {eq sqrt(inf) inf}
assert {istrcontains sqrt(-inf) nan}
println_colored green "sqrt tests passed!"

assert {approx_eq sin(0) 0 0.00001}
assert {approx_eq sin(1) 0.84147096 0.00001}
assert {approx_eq sin(-1) -0.84147096 0.00001}
assert {approx_eq sin(3) 0.14112 0.00001}
assert {approx_eq sin(-3) -0.14112 0.00001}
assert {approx_eq sin($pi) 0 0.00001}
assert {approx_eq sin(neg($pi)) 0 0.00001}
assert {approx_eq sin(mul($pi 2)) 0 0.00001}
assert {approx_eq sin(neg(mul($pi 2))) 0 0.00001}
assert {approx_eq sin(div($pi 2)) 1 0.00001}
assert {approx_eq sin(neg(div($pi 2))) -1 0.00001}
println_colored green "sin tests passed!"

assert {approx_eq cos(0) 1 0.00001}
assert {approx_eq cos(1) 0.5403023 0.00001}
assert {approx_eq cos(-1) 0.5403023 0.00001}
assert {approx_eq cos(3) -0.9899925 0.00001}
assert {approx_eq cos(-3) -0.9899925 0.00001}
assert {approx_eq cos($pi) -1 0.00001}
assert {approx_eq cos(neg($pi)) -1 0.00001}
assert {approx_eq cos(mul($pi 2)) 1 0.00001}
assert {approx_eq cos(neg(mul($pi 2))) 1 0.00001}
assert {approx_eq cos(div($pi 2)) 0 0.00001}
assert {approx_eq cos(neg(div($pi 2))) 0 0.00001}
println_colored green "cos tests passed!"

assert {approx_eq tan(0) 0 0.00001}
assert {approx_eq tan(1) 1.5574077 0.00001}
assert {approx_eq tan(-1) -1.5574077 0.00001}
assert {approx_eq tan(3) -0.14254655 0.00001}
assert {approx_eq tan(-3) 0.14254655 0.00001}
assert {approx_eq tan($pi) 0 0.00001}
assert {approx_eq tan(neg($pi)) 0 0.00001}
assert {approx_eq tan(mul($pi 2)) 0 0.00001}
assert {approx_eq tan(neg(mul($pi 2))) 0 0.00001}
assert {approx_eq tan(1.56) 92.6204963 0.00001}
assert {approx_eq tan(-1.56) -92.6204963 0.00001}
println_colored green "tan tests passed!"

assert {approx_eq asin(0) 0 0.00001}
assert {approx_eq asin(0.84147096) 1 0.00001}
assert {approx_eq asin(-0.84147096) -1 0.00001}
assert {approx_eq asin(0.14112) 0.14159265 0.00001}
assert {approx_eq asin(-0.14112) -0.14159265 0.00001}
assert {approx_eq asin(1) div($pi 2) 0.00001}
assert {approx_eq asin(-1) neg(div($pi 2)) 0.00001}
println_colored green "asin tests passed!"

assert {approx_eq acos(1) 0 0.00001}
assert {approx_eq acos(0.5403023) 1 0.00001}
assert {approx_eq acos(0.9899925) 0.14159265 0.00001}
assert {approx_eq acos(-1) $pi 0.00001}
assert {approx_eq acos(0) div($pi 2) 0.00001}
println_colored green "acos tests passed!"

assert {approx_eq atan(0) 0 0.00001}
assert {approx_eq atan(0.84147096) 0.6995216 0.00001}
assert {approx_eq atan(-0.84147096) -0.6995216 0.00001}
assert {approx_eq atan(0.14112) 0.14019424 0.00001}
assert {approx_eq atan(-0.14112) -0.14019424 0.00001}
println_colored green "atan tests passed!"

assert {approx_eq atan2(1 1) div($pi 4) 0.00001}
assert {approx_eq atan2(-1 1) neg(div($pi 4)) 0.00001}
assert {approx_eq atan2(1 -1) div(mul(3 $pi) 4) 0.00001}
assert {approx_eq atan2(-1 -1) neg(div(mul(3 $pi) 4)) 0.00001}
println_colored green "atan2 tests passed!"

assert {eq max(0 0) 0}
assert {eq max(0 1) 1}
assert {eq max(1 0) 1}
assert {eq max(1 1) 1}
assert {eq max(0 1349358) 1349358}
assert {eq max(1349358 0) 1349358}
assert {eq max(0 -1349358) 0}
assert {eq max(-1349358 0) 0}
assert {eq max(-1349358 0.123) 0.123}
assert {eq max(1349358 1349358) 1349358}
assert {eq max(-1349358 -1349358) -1349358}
assert {eq max(123.123 -123) 123.123}
assert {eq max(-123.123 123) 123}
println_colored green "max tests passed!"

assert {eq min(0 0) 0}
assert {eq min(0 1) 0}
assert {eq min(1 0) 0}
assert {eq min(1 1) 1}
assert {eq min(0 1349358) 0}
assert {eq min(1349358 0) 0}
assert {eq min(0 -1349358) -1349358}
assert {eq min(-1349358 0) -1349358}
assert {eq min(-1349358 0.123) -1349358}
assert {eq min(1349358 1349358) 1349358}
assert {eq min(-1349358 -1349358) -1349358}
assert {eq min(123.123 -123) -123}
assert {eq min(-123.123 123) -123.123}
println_colored green "min tests passed!"

assert {eq log(0) -inf}
assert {istrcontains log(-1) nan}
assert {approx_eq log(1) 0 0.00001}
assert {approx_eq log(2) 0.30103 0.00001}
assert {approx_eq log(10) 1 0.00001}
assert {approx_eq log(20) 1.30103 0.00001}
println_colored green "log tests passed!"

assert {eq ln(0) -inf}
assert {istrcontains ln(-1) nan}
assert {approx_eq ln(1) 0 0.00001}
assert {approx_eq ln(2) 0.6931472 0.00001}
assert {approx_eq ln(10) 2.3025851 0.00001}
assert {approx_eq ln($e) 1 0.00001}
println_colored green "ln tests passed!"

assert {approx_eq logn(2 2) 1 0.00001}
assert {approx_eq logn(5 5) 1 0.00001}
assert {approx_eq logn(10 3) log(3) 0.00001}
assert {approx_eq logn(10 1) log(1) 0.00001}
assert {approx_eq logn(10 10) log(10) 0.00001}
assert {approx_eq logn(10 20) log(20) 0.00001}
assert {approx_eq logn($e $e) ln($e) 0.00001}
assert {approx_eq logn($e 10) ln(10) 0.00001}
assert {approx_eq logn($e 20) ln(20) 0.00001}
println_colored green "logn tests passed!"

assert {approx_eq exp(-2) 0.13533528 0.00001}
assert {approx_eq exp(-1) 0.36787945 0.00001}
assert {approx_eq exp(0) 1 0.00001}
assert {approx_eq exp(1) $e 0.00001}
assert {approx_eq exp(2) 7.389056 0.00001}
assert {approx_eq exp(ln(3)) 3 0.00001}
assert {approx_eq exp(ln(10)) 10 0.00001}
assert {approx_eq ln(exp(3)) 3 0.00001}
assert {approx_eq ln(exp(10)) 10 0.00001}
assert {approx_eq ln(exp(-2)) -2 0.00001}
assert {istrcontains exp(ln(-2)) nan}
println_colored green "exp tests passed!"

println_colored green "Math tests passed!"
