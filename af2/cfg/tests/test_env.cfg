println "------------------------------"
println "Running environment tests..."

assert {not exists(x)}
assert {not defined(x)}
var x
assert {streq type(x) var}
assert {exists x}
assert {defined x}
scope {
	assert {not exists(x)}
	assert {defined x}
}
scope {
	var y
	assert {not exists(x)}
	assert {exists y}
	assert {defined x}
	assert {defined y}
}
assert concat("eq 0 " exists(y))
assert concat("eq 0 " defined(y))
delete x
assert {not exists(x)}
assert {not defined(x)}
var x abc
assert {streq $x abc}
x 123
assert {streq $x 123}
delete x
set x 123
assert {streq $x 123}
set x 456
assert {streq $x 456}
delete x
assert {not exists(x)}
assert {not defined(x)}
function f x {x}
assert {streq type(f) function}
assert {not exists(x)}
assert {not defined(x)}
assert {exists f}
assert {defined f}
assert {streq f(abc) abc}
assert {streq f(123) 123}
delete f
assert {not exists(x)}
assert {not defined(x)}
function f x y {mul $x $y}
assert {eq f(2 3) 6}
assert {eq f(10 10) 100}
delete f
assert {not exists(x)}
assert {not defined(x)}
table t
assert {streq type(t) table}
assert {exists t}
assert {defined t}
assert {streq $t ""}
assert {empty t(x)}
t x 3
assert {not exists(x)}
assert {not defined(x)}
assert {streq t(x) 3}
delete t x
assert {empty t(x)}
delete t
assert {not exists(t)}
assert {not defined(t)}

// TODO: Add more env tests.

println_colored green "Environment tests passed!"
