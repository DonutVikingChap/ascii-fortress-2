import file menus/af2_menu
import file lib/gui

// Disconnect in case this file is run when in-game.
if is_running() {
	disconnect
	// Wait until we have finished disconnecting.
	while {is_running} {
		wait
	}
}

meta_start // Start the meta client.

menu_begin "server_list"

// Element ids.
const id_screen menu_new_id()
const id_server_list_text menu_new_id()
const id_back_button menu_new_id()
const id_refresh_button menu_new_id()
const id_username_text menu_new_id()
const id_username_input menu_new_id()
const id_password_text menu_new_id()
const id_password_input menu_new_id()
const id_connect_button menu_new_id()

const list_x_begin 17
const list_y_begin 4
const list_w 35
const list_h 17
const list_x_end add($list_x_begin $list_w)
const list_y_end add($list_y_begin $list_h)
const elem_h 3
const max_elems ceil(div($list_h $elem_h))
const list_select_x sub($list_x_begin 2)
const list_name_x add($list_select_x 2)
const list_name_w 22
const list_players_x add(add($list_name_x $list_name_w) 1)
const list_players_w 7
const list_ping_x add(add($list_players_x $list_players_w) 1)

var dirty 1
var scroll 0
var hovered -1
var selected 0
var is_connecting 0
var has_received_ips 0
var received_ip_count 0
var info_count 0
var selected_ip ""
array elem_ids

var mutex 0

function try_lock {
	if $mutex {
		return 0
	}
	mutex 1
	return 1
}

function unlock {
	mutex 0
}

function inside_list_area x y {
	return and(ge($x $list_x_begin) lt($x $list_x_end) ge($y $list_y_begin) lt($y $list_y_end))
}

function index_inside i begin {
	return and(ge($i $begin) lt($i add($begin $max_elems)))
}

function max_index {
	return max(0 sub($info_count 1))
}

function max_scroll {
	return max(0 sub($info_count $max_elems))
}

function clamp_text text w h {
	const len strlen($text)
	var str ""
	var i 0
	var x 0
	var y 0
	while {lt $i $len} {
		if ge($y $h) {
			break
		}
		elif ge($x $w) {
			append str "\n"
			x 0
			y add($y 1)
			const ch char_at($text $i)
			if or(streq($ch "\n") streq($ch " ") streq($ch "\t")) {
				i add($i 1)
			}
		}
		else {
			const ch char_at($text $i)
			if streq($ch "\n") {
				x 0
				y add($y 1)
			}
			else {
				x add($x 1)
			}
			append str $ch
			i add($i 1)
		}
	}
	return $str
}

function new_elem_id {
	const id menu_new_id()
	push elem_ids $id
	return $id
}

function redraw {
	// Remove old GUI elements.
	foreach id elem_ids {
		gui_remove $id
	}
	clear elem_ids

	// Clamp scroll.
	scroll clamp($scroll 0 max_scroll())

	// Iterate server info table and draw server list.
	dirty 0
	is_connecting $meta_is_connecting
	has_received_ips $meta_has_received_ip_list
	received_ip_count $meta_ip_count
	array infos $meta_info
	info_count size(infos)
	if eq($info_count 0) {
		if $has_received_ips {
			if ne($received_ip_count 0) {
				gui_text new_elem_id() add($list_x_begin 6) add($list_y_begin 7) white "Fetching server info..."
			}
		}
		else {
			if $is_connecting {
				gui_text new_elem_id() add($list_x_begin 12) add($list_y_begin 7) white "Connecting..."
			}
		}
	}
	else {
		var i 0
		foreach info infos {
			if index_inside($i $scroll) {
				table t $info
				const hostname t("hostname")
				const ip t("ip")
				const version t("version")
				const players t("players")
				const maxplayers t("maxplayers")
				const bots t("bots")
				const map t("map")
				const ping t("ping")
				const y add($list_y_begin mul(sub($i $scroll) $elem_h))
				const h sub($elem_h 1)

				if eq($i $selected) {
					gui_text new_elem_id() $list_select_x $y white ">"
					if not(streq($selected_ip $ip)) {
						selected_ip $ip
						println_colored gray "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
						print concat( \
							$hostname "\n" \
							"\n" \
							"Version: " $version "\n" \
							"Ping:    " $ping " ms\n" \
							"Players: " $players "/" $maxplayers " (" $bots " bots)\n" \
							"Map:     " $map "\n" \
							"\n" \
							"\n" \
							"Press Connect to join.\n")
					}
				}
				elif eq($i $hovered) {
					gui_text new_elem_id() $list_select_x $y gray ">"
				}

				gui_text new_elem_id() $list_name_x $y white clamp_text($hostname $list_name_w $h)

				var players_text concat($players "/" $maxplayers)
				if ne($bots 0) {
					append players_text concat("\n" $bots " bots")
				}
				gui_text new_elem_id() $list_players_x $y white clamp_text($players_text $list_players_w $h)

				var ping_color
				if lt($ping 50) {
					ping_color lime
				}
				elif lt($ping 100) {
					ping_color orange
				}
				else {
					ping_color red
				}
				gui_text new_elem_id() $list_ping_x $y $ping_color $ping

				const separator_y add($y $h)
				if lt($separator_y $list_y_end) {
					gui_text new_elem_id() $list_x_begin $separator_y gray "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
				}
			}
			i add($i 1)
		}
	}
}

function try_connect {
	if empty($selected_ip) {
		throw "No server selected!"
	}
	if empty($username) {
		throw "Please choose a username!"
	}
	disconnect
	while {is_running_meta_client} {
		wait
	}
	connect $selected_ip
}

function try_refresh {
	dirty 1
	meta_refresh
	selected 0
	selected_ip ""
}

function on_direction dx dy {
	if try_lock() {
		selected clamp(add($selected $dy) 0 max_index())
		scroll clamp($scroll sub($selected sub($max_elems 1)) $selected)
		redraw
		unlock
	}
}

function on_click x y {
	if try_lock() {
		if inside_list_area($x $y) {
			for i 0 $info_count {
				if index_inside($i $scroll) {
					const elem_y_begin add($list_y_begin mul(sub($i $scroll) $elem_h))
					const elem_y_end add($elem_y_begin $elem_h)
					if and(ge($y $elem_y_begin) lt($y $elem_y_end)) {
						if ne($selected $i) {
							selected $i
							redraw
						}
						break
					}
				}
			}
		}
		unlock
	}
}

function on_scroll x y dx dy {
	if try_lock() {
		if inside_list_area($x $y) {
			scroll add($scroll $dy)
			redraw
		}
		unlock
	}
}

function on_hover x y {
	if try_lock() {
		if inside_list_area($x $y) {
			for i 0 $info_count {
				if index_inside($i $scroll) {
					const elem_y_begin add($list_y_begin mul(sub($i $scroll) $elem_h))
					const elem_y_end add($elem_y_begin $elem_h)
					if and(ge($y $elem_y_begin) lt($y $elem_y_end)) {
						if ne($hovered $i) {
							hovered $i
							redraw
						}
						break
					}
				}
			}
		}
		else {
			if ne($hovered -1) {
				hovered -1
				redraw
			}
		}
		unlock
	}
}

// Element layout.
// command       id                      x  y   w  h  color  text               function
gui_screen_file  $id_screen              0  0         white  "server_list.txt"
gui_text         $id_server_list_text    3  3         white  "Server List"

gui_button       $id_back_button         3  6   11 5  white  "<- Back"          {main_menu}

gui_button       $id_refresh_button      3  13  11 5  white  "Refresh"          {try_refresh}

gui_text         $id_username_text       3  24        white  "Username"
gui_cvar_input   $id_username_input      2  25  20 3  white                     username

gui_text         $id_password_text       24 24        white  "Server Password"
gui_cvar_input   $id_password_input      23 25  18 3  white                     password

gui_button       $id_connect_button      42 23  11 5  white  "Connect"          {try_connect}

// Add the menu.
gui_push_menu --on_select_none {open_console} --on_escape {main_menu} --on_direction on_direction --on_click on_click --on_scroll on_scroll --on_hover on_hover \
	$id_back_button \
	$id_refresh_button \
	$id_username_input \
	$id_password_input \
	$id_connect_button
	
wait
meta_refresh

release launch(script {
	while {is_running_meta_client} {
		if try_lock() {
			if or($dirty ne($meta_info_count $info_count) ne($meta_is_connecting $is_connecting) ne($meta_has_received_ip_list $has_received_ips) ne($meta_ip_count $received_ip_count)) {
				redraw
			}
			unlock
		}
		sleep 100
	}
})
